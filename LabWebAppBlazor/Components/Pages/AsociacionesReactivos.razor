@page "/asociaciones-reactivos"
@rendermode InteractiveServer
@using LabWebAppBlazor.DTOs
@using LabWebAppBlazor.Models
@using LabWebAppBlazor.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject IApiService ApiService
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="container-fluid px-3">
    <div class="d-flex align-items-center mb-4">
        <i class="bi bi-link-45deg fs-3 text-primary me-2"></i>
        <h4 class="m-0">Asociaciones Exámenes - Reactivos</h4>
    </div>

    @if (cargando)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status"></div>
            <p class="mt-3">Cargando asociaciones...</p>
        </div>
    }
    else if (asociaciones.Any())
    {
        <div class="d-flex justify-content-end mb-3">
            <button class="btn btn-success" @onclick="IrAVinculoReactivos">
                <i class="bi bi-plus-circle me-2"></i>Vincular Reactivos
            </button>
        </div>

        <div class="table-responsive shadow-sm rounded">
            <table class="table table-hover table-bordered align-middle text-center">

                <thead class="table-light">
                    <tr>
                        <th>Examen</th>
                        <th>Reactivo</th>
                        <th class="text-end">Cantidad Usada</th>
                        <th>Unidad</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in asociaciones)
                    {
                        <tr>
                            <td>@item.NombreExamen</td>
                            <td>@item.NombreReactivo</td>
                            <td class="text-end">@item.CantidadUsada</td>
                            <td>@item.Unidad</td>
                            <td>
                                <button class="btn btn-warning btn-sm shadow-sm" @onclick="() => IrAEditar(item.IdExamen)" title="Editar">
                                    <i class="bi bi-pencil-square text-dark"></i>
                                </button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning d-flex align-items-center mt-4" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i>
            No hay asociaciones registradas aún.
        </div>

        <div class="d-flex justify-content-end mt-3">
            <button class="btn btn-success" @onclick="IrAVinculoReactivos">
                <i class="bi bi-plus-circle me-2"></i>Vincular Reactivos
            </button>
        </div>
    }
</div>

@code {
    private bool cargando = true;
    private List<AsociacionReactivoDto> asociaciones = new();

    protected override async Task OnInitializedAsync()
    {
        var datos = await ApiService.ObtenerTodasLasAsociacionesAsync();
        asociaciones = datos.ToList();
        cargando = false;
    }

    private void IrAEditar(int idExamen)
    {
        Navigation.NavigateTo($"/examenes-reactivos?idExamen={idExamen}");
    }

    private void IrAVinculoReactivos()
    {
        Navigation.NavigateTo("/examenes-reactivos");
    }
}
