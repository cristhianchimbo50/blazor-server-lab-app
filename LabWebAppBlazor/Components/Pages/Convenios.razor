@page "/convenios"
@rendermode InteractiveServer
@using LabWebAppBlazor.Models
@using LabWebAppBlazor.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;

@inject IApiService ApiService
@inject AuthenticationStateProvider AuthProvider
@inject IJSRuntime JS
@inject NavigationManager Navigation

<h3 class="mb-4 d-flex align-items-center">
    <i class="fas fa-handshake text-primary fs-4 me-2"></i>Gestión de Convenios
</h3>


    @if (!isRendered)
    {
        <div class="alert alert-info text-center shadow-sm">
            <i class="bi bi-hourglass-split me-2"></i> Cargando interfaz...
        </div>
    }
    else if (!showContent)
    {
        <div class="alert alert-danger text-center shadow-sm">
            <i class="bi bi-shield-lock-fill me-2"></i> No autorizado para ver esta página.
        </div>
    }
    else
    {
        <!-- Filtros -->
        <div class="card mb-4 shadow-sm">
            <div class="card-body row g-3">
                <div class="col-md-3">
                    <label class="form-label">Buscar por</label>
                    <InputSelect class="form-select" @bind-Value="criterioBusqueda">
                        <option value="">-- Seleccione --</option>
                        <option value="numero">Número Convenio</option>
                        <option value="medico">Nombre Médico</option>
                    </InputSelect>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Valor</label>
                    <InputText class="form-control" @bind-Value="valorBusqueda" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Desde</label>
                    <InputDate class="form-control" @bind-Value="fechaDesde" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Hasta</label>
                    <InputDate class="form-control" @bind-Value="fechaHasta" />
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button class="btn btn-primary w-100" @onclick="FiltrarConvenios" title="Filtrar">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
                <div class="col-12 text-end mt-2">
                    <button class="btn btn-success" @onclick="IrAIngresoConvenio">
                        <i class="bi bi-plus-circle me-1"></i> Registrar Convenio
                    </button>
                </div>
            </div>
        </div>

        <!-- Resultados -->
        @if (convenios is null || convenios.Count == 0)
        {
            <div class="alert alert-warning shadow-sm">
                <i class="bi bi-exclamation-circle me-2"></i> No se encontraron convenios.
            </div>
        }
        else
        {
            <div class="table-responsive shadow-sm">
                <table class="table table-hover table-bordered text-center align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Número</th>
                            <th>Médico</th>
                            <th>Fecha</th>
                            <th>Total Órdenes</th>
                            <th>% Comisión</th>
                            <th>Total Médico</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var c in convenios)
                        {
                            var totalMedico = Math.Round((c.MontoTotal * c.PorcentajeComision / 100), 2);
                            <tr>
                                <td>@c.IdConvenio</td>
                                <td class="text-truncate">@c.NombreMedico</td>
                                <td>@c.FechaConvenio.ToString("dd/MM/yyyy")</td>
                                <td>@c.MontoTotal.ToString("C")</td>
                                <td>@c.PorcentajeComision.ToString("0.##")%</td>
                                <td>@totalMedico.ToString("C")</td>
                                <td>
                                    <span class="badge rounded-pill bg-@(c.Anulado ? "danger" : "success")">
                                        @(c.Anulado ? "Anulado" : "Habilitado")
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="d-flex justify-content-center gap-2">
                                        <button class="btn btn-sm shadow-sm text-white" title="Ver Detalles"
                                                style="background-color: #007bff; border-color: #007bff; border-radius: 0.5rem;"
                                                @onclick="() => VerConvenio(c.IdConvenio)">
                                            <i class="bi bi-eye-fill"></i>
                                        </button>
                                        @if (!c.Anulado)
                                        {
                                            <button class="btn btn-danger btn-sm shadow-sm" title="Anular Convenio"
                                                    style="border-radius: 0.5rem;"
                                                    @onclick="() => AnularConvenio(c.IdConvenio)">
                                                <span class="fw-bold text-white">X</span>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }

    <!-- Modal Detalle -->
    @if (mostrarModal && convenioDetalle is not null)
    {
        var totalMedico = Math.Round(convenioDetalle.MontoTotal * convenioDetalle.PorcentajeComision / 100, 2);

        <div class="modal fade show d-block" style="background-color: rgba(0,0,0,0.4);">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content shadow">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title">
                            <i class="bi bi-info-circle me-2"></i>Detalle Convenio #@convenioDetalle.IdConvenio
                        </h5>
                        <button class="btn-close" @onclick="CerrarModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-4"><strong>Médico:</strong> @convenioDetalle.NombreMedico</div>
                            <div class="col-md-4"><strong>Fecha:</strong> @convenioDetalle.FechaConvenio.ToString("dd/MM/yyyy")</div>
                            <div class="col-md-4"><strong>Órdenes:</strong> @convenioDetalle.Ordenes.Count()</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4"><strong>Total Órdenes:</strong> @convenioDetalle.MontoTotal.ToString("C")</div>
                            <div class="col-md-4"><strong>% Comisión:</strong> @convenioDetalle.PorcentajeComision.ToString("0.##")%</div>
                            <div class="col-md-4"><strong>Total Médico:</strong> @totalMedico.ToString("C")</div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-sm table-bordered align-middle text-center">
                                <thead class="table-light">
                                    <tr>
                                        <th>N° Orden</th>
                                        <th>Paciente</th>
                                        <th>Fecha</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var orden in convenioDetalle.Ordenes)
                                    {
                                        <tr>
                                            <td>@orden.NumeroOrden</td>
                                            <td class="text-truncate">@orden.Paciente</td>
                                            <td>@orden.FechaOrden?.ToString("dd/MM/yyyy")</td>
                                            <td>@orden.Total.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" @onclick="CerrarModal">
                            <i class="bi bi-x-circle me-1"></i> Cerrar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }




@code {
    private List<ConvenioDto> convenios = new();
    private ConvenioDetalleDto? convenioDetalle;
    private string criterioBusqueda = "";
    private string valorBusqueda = "";
    private DateTime? fechaDesde = null;
    private DateTime? fechaHasta = null;
    private bool isRendered = false, showContent = false;
    private bool mostrarModal = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var auth = await AuthProvider.GetAuthenticationStateAsync();
            if (!auth.User.Identity?.IsAuthenticated ?? true)
            {
                Navigation.NavigateTo("/login", true);
                return;
            }

            isRendered = true;
            showContent = true;
            await CargarConvenios();
            StateHasChanged();
        }
    }

    private async Task CargarConvenios()
    {
        convenios = await ApiService.GetConveniosAsync();
    }

    private async Task FiltrarConvenios()
    {
        var todos = await ApiService.GetConveniosAsync();
        var filtrados = todos.AsEnumerable();

        if (!string.IsNullOrWhiteSpace(criterioBusqueda) && !string.IsNullOrWhiteSpace(valorBusqueda))
        {
            var val = valorBusqueda.ToLower();

            filtrados = criterioBusqueda switch
            {
                "numero" => filtrados.Where(c => c.IdConvenio.ToString().Contains(val)),
                "medico" => filtrados.Where(c => c.NombreMedico.ToLower().Contains(val)),
                _ => filtrados
            };
        }

        if (fechaDesde.HasValue)
            filtrados = filtrados.Where(c => c.FechaConvenio >= DateOnly.FromDateTime(fechaDesde.Value));

        if (fechaHasta.HasValue)
            filtrados = filtrados.Where(c => c.FechaConvenio <= DateOnly.FromDateTime(fechaHasta.Value));

        convenios = filtrados.ToList();
    }

    private async Task VerConvenio(int id)
    {
        convenioDetalle = await ApiService.GetConvenioDetalleAsync(id);
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
        convenioDetalle = null;
    }

    private async Task AnularConvenio(int id)
    {
        if (!await JS.InvokeAsync<bool>("confirm", "¿Está seguro que desea anular este convenio?")) return;

        var response = await ApiService.AnularConvenioAsync(id);
        if (response.IsSuccessStatusCode)
        {
            await CargarConvenios();
            await JS.InvokeVoidAsync("alert", "Convenio anulado.");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "No se pudo anular el convenio.");
        }
    }

    private void IrAIngresoConvenio()
    {
        Navigation.NavigateTo("/ingreso_convenio");
    }
}
