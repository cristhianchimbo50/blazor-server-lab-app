@namespace LabWebAppBlazor.Components.Pages
@using LabWebAppBlazor.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@GetLayout(routeData)">
                <NotAuthorized>
                    @if (!_isAuthenticated && !context.User.Identity?.IsAuthenticated == true)
                    {
                        if (OperatingSystem.IsBrowser())
                        {
                            <RedirectToLogin />
                        }
                        else
                        {
                            <p>Cargando...</p> <!-- Estamos en prerender -->
                        }
                    }
                    else
                    {
                        <p>No tienes permiso para acceder a esta página.</p>
                    }
                </NotAuthorized>
                <Authorizing>
                    <p>Verificando credenciales...</p>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Página no encontrada.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private bool _isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private Type GetLayout(RouteData routeData)
    {
        var pageType = routeData.PageType;
        if (pageType == typeof(Login))
        {
            return typeof(EmptyLayout);
        }
        return typeof(MainLayout);
    }
}
